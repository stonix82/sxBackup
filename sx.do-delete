#!/bin/bash

. /root/Scripts/Backup/Config/sx.settings

$Netlog $NL_TXT_INIT "Starting check and calculating free disk space..."

function free_enough {

    result_free=`/bin/df $DIR_Full --output=avail`
    result_size=`/bin/du -d 0 $DIR_Incr`

    free=""
    size=""
    res=""

    if [[ "$result_free" =~ ([0-9]+) ]]; then
        free=${BASH_REMATCH[1]}

        TXT=`printf '... free  : %10i\n' $free`
        $Netlog "$TXT"

        TXT=`printf '... buffer: %10i\n' $buffer`
        $Netlog "$TXT"

        free=$((free - buffer))
        TXT=`printf '... usable: %10i\n' $free`
        $Netlog "$TXT"

    else
        res="FAIL"
        $Netlog $NL_TXT_FAIL "Can't determine free disk space"
    fi

    if [[ "$result_size" =~ ([0-9]+) ]]; then
        size=${BASH_REMATCH[1]}
        TXT=`printf '... need  : %10i\n' $size`
        $Netlog "$TXT"
    else
        res="FAIL"
        $Netlog $NL_TXT_FAIL "Can't determine size of backup"
    fi

    if [[ "$res" == "" ]]; then

        if [[ $free -gt $size  ]]; then
            res="OK"
            $Netlog $NL_TXT_OK "Free disk space available"
        else
            res="NOGO"
            $Netlog $NL_TXT_NOGO "Required disk space not available"
        fi

    fi
}

free_enough

if [[ "$res" == "FAIL" ]]; then

    $Netlog $NL_TXT_FAIL "Unable to calculate required disk space"
    exit "-1"

fi

d=0
while [ "$res" == "NOGO"  ]; do

    d=$((d++))

    if [[ "$d" == 4 ]]; then
        $Netlog $NL_TXT_CRIT "Maximum deletes of $d reached."
        exit -2
    fi

    i=0;
    declare -a Snaps;

    for snap in `/bin/ls $DIR_Full`; do

        if [[ "$snap" =~ ([0-9]+[\-][0-9]+[\-][0-9]+) ]]; then
            Snaps[$((i++))]="$snap"
        fi

    done

    $Netlog $NL_TXT_INIT "Delete oldest snapshot: $DIR_Full${Snaps[0]}"

    if [[ "$DIR_Full${Snaps[0]}" != "/" ]]; then

        /bin/rm -rf $DIR_Full${Snaps[0]}

    fi

    $Netlog $NL_TXT_DONE "Deleted oldest snapshot: $DIR_Full${Snaps[0]}"

    free_enough

done
