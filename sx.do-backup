#!/bin/bash

Start=`date +%s`

. /root/Scripts/Backup/Config/sx.settings
. /root/Scripts/Backup/Config/sx.joblist

if [[ "`cat $DIR_Stat/$Host`" == 'running' ]]; then
    exit
else
    echo -n running > $DIR_Stat/$Host
fi

$Netlog "Start backup processes..."
overall_er=0
overall=0

function do_backup {

    $Netlog $NL_TXT_INIT ${Descr[$1]}

    if [[ `$DIR_Jobs/$Script_PF$1` ]]; then
        $Netlog $NL_TXT_OK ${Descr[$1]}
        echo -n "OK" > $DIR_Stat/_$1
        overall=$((overall+1))
    else
        $Netlog $NL_TXT_FAIL ${Descr[$1]}
        echo -n "FAIL" > $DIR_Stat/_$1
        overall_er=$((overall_er+1))
    fi
}

# This runs every day
for k in "${KEY[@]}"; do

    # Full-backup not every day
    if [[ "$k" != "fullbackup" ]]; then
        do_backup $k
    else
        # only once a week on Monday
        if [[ `date +%u` == "1" ]]; then
            $DIR_Base/sx.do-delete \
            && do_backup $k \
            || $Netlog $NL_TXT_FAIL "Something's goes wrong during delete."
        else
            echo -n "OK" > $DIR_Stat/_$k
        fi
    fi
done

End=`date +%s`

Diff=`expr $End - $Start`
Hrs=`echo "scale=3;$Diff/3600" | bc -l`


if [[ $overall_er > 0 ]]; then
    $Netlog "... finished with $overall_er errors in $Diff seconds ($Hrs hrs)."
else
    $Netlog "... all $overall backups completed successfully in $Diff seconds ($Hrs hrs)."
fi

echo -n "completed" > $DIR_Stat/$Host
